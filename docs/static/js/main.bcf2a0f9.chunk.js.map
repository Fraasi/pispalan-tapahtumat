{"version":3,"sources":["components/Event/index.js","components/About/index.js","App.js","serviceWorker.js","index.js"],"names":["Event","props","_props$data","data","name","url","events","onTitleClick","e","error_msg","react_default","a","createElement","lib","header","concat","error_title","onSelect","className","href","target","rel","key","slice","cleanedName","charAt","toUpperCase","replace","todayDate","Date","getDate","isThereEventToday","eventRows","map","event","i","date","startTimeStamp","dateParsed","preStartTimeStamp","getMonth","eventToday","todayBGColor","style","backgroundColor","length","About","actions","waves","modal","trigger","top","right","position","title","client","Stitch","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","App","_useState","useState","_useState2","Object","slicedToArray","setData","_useState3","_useState4","errorMsg","setErrorMsg","_useState5","_useState6","expanded","setExpanded","useEffect","document","querySelector","auth","loginWithCredential","AnonymousCredential","then","user","collection","find","_id","asArray","docs","returnData","sort","first","second","console","log","catch","err","error","components_About","offLabel","onLabel","onChange","prev","M_Collapsible","close","open","toString","size","flashing","accordion","el","components_Event","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcf2a0f9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CollapsibleItem } from 'react-materialize'\r\nimport './event.css'\r\n\r\nconst Event = (props) => {\r\n\r\n  let { name, url, events } = props.data\r\n\r\n  // onSelect is not a function error without this\r\n  const onTitleClick = (e) => { }\r\n\r\n  if (events.error_msg) {\r\n    return (\r\n      <CollapsibleItem\r\n        header={`${events.error_title} (${name}) *!*!*`}\r\n        onSelect={onTitleClick}\r\n      >\r\n        <span className=\"sub-header\">Käyhän nettisivuilla&nbsp;<a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></span><br /><br />\r\n        <ul>\r\n          {\r\n            <li key={'error'}>\r\n              {events.error_msg}\r\n            </li>\r\n          }\r\n        </ul>\r\n      </CollapsibleItem>\r\n    )\r\n  }\r\n\r\n  if (name === 'dogs_home' || name === 'maanalainen') return null\r\n  if (name === 'vastavirta') events = events.slice(0, 10)\r\n  const cleanedName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`.replace(/_/g, ' ')\r\n  const todayDate = new Date().getDate() + 1\r\n  let isThereEventToday = false\r\n\r\n  const eventRows = events.map((event, i) => {\r\n    const date = new Date(event.startTimeStamp)\r\n    const dateParsed = `${event.preStartTimeStamp || ''}${date.getDate()}.${date.getMonth() + 1}`\r\n    const eventToday = date.getDate() === todayDate\r\n    if (eventToday) isThereEventToday = true\r\n    const todayBGColor = eventToday ? 'rgba(39,169,157,0.7)' : ''\r\n\r\n    return (\r\n      <tr key={i} style={{ backgroundColor: todayBGColor }}>\r\n        <td>{dateParsed}</td><td>—</td><td>{event.event}</td>\r\n      </tr>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <CollapsibleItem\r\n      header={`${cleanedName} (${events.length}) ${isThereEventToday ? '!' : ''}`}\r\n      onSelect={onTitleClick}\r\n    >\r\n      <span className=\"sub-header\">Aukioloajat & Tarkemmat tiedot<br /><a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></span><br /><br />\r\n      <table>\r\n        <tbody>\r\n          {\r\n            eventRows\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </CollapsibleItem>\r\n  )\r\n}\r\n\r\nexport default Event\r\n","import React from 'react'\r\nimport { Modal, Button } from 'react-materialize'\r\n\r\nconst About = () => {\r\n\r\n  return (\r\n    <Modal\r\n      header=\"Pispalan tapahtumat\"\r\n      actions={<Button\r\n        waves=\"green\" modal=\"close\"\r\n      >Sulje</Button>}\r\n      trigger={<Button style={{\r\n        top: '10px',\r\n        right: '10px',\r\n        position: 'absolute'\r\n        }}\r\n        title=\"Info\"\r\n        >?</Button>}>\r\n      <p>\r\n        Pispalassa on paljon pieniä eri yhdistyksiä, jotka järjestävät kaikenlaisia mukavia tapahtumia ja tekemisiä.\r\n      </p>\r\n      <p>\r\n        Tämä on pieni yritys koota kaikki samalle sivustolle, jotta olisi helpompi löytää mitä ja missä milloinkin tapahtuu.\r\n      </p>\r\n      <p>\r\n        Rajaportin sauna ja pispalan kirjasto työn alla...\r\n      </p>\r\n      <p>\r\n        Jos sivulta löytyy virheitä tai on jotain muuta valitettavaa tai haluat ehdottaa jotain paikkaa listalle, sähköpostia voi lähettää osoitteeseen fraasi.gh@gmail.com\r\n      </p>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default About","import React, { useState, useEffect } from 'react'\r\nimport { Preloader, Collapsible, Switch } from 'react-materialize'\r\nimport Event from './components/Event'\r\nimport About from './components/About'\r\nimport './App.css'\r\n\r\nimport { Stitch, RemoteMongoClient, AnonymousCredential } from 'mongodb-stitch-browser-sdk'\r\n\r\nconst client = Stitch.initializeDefaultAppClient('tapahtumat-api-lffsa')\r\nconst db = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db('tapahtumat')\r\n\r\nfunction App() {\r\n\r\n  const [data, setData] = useState(null)\r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n  const [expanded, setExpanded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    document.querySelector('.switch').title = 'Avaa/sulje kaikki'\r\n    client.auth.loginWithCredential(new AnonymousCredential())\r\n      .then(user => {\r\n        return db.collection('pispala').find({}, { data: 1, _id: 0 }).asArray()\r\n      }\r\n      ).then(docs => {\r\n        const returnData = docs[0].data.sort((first, second) => first.name < second.name ? -1 : 1)\r\n        setData(() => returnData)\r\n        console.log('data', returnData)\r\n      }).catch(err => {\r\n        console.error('error', err)\r\n        setErrorMsg(() => err)\r\n      })\r\n  }, [])\r\n\r\n  const onSwitchChange = () => {\r\n    setExpanded(prev => !prev)\r\n    if (expanded) document.querySelector('.collapsible.expandable').M_Collapsible.close()\r\n    else document.querySelector('.collapsible.expandable').M_Collapsible.open()\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <About />\r\n      <Switch\r\n        offLabel=\"\"\r\n        onLabel=\"\"\r\n        onChange={onSwitchChange}\r\n      />\r\n      <header className=\"App-header\">Pispalan Tapahtumat</header>\r\n      {\r\n        errorMsg !== null\r\n          ? (<div className=\"error-loader\">{errorMsg.toString()}</div>)\r\n          : data === null\r\n            ? (<div className=\"error-loader\">\r\n                Haetaan tapahtumia...<br /><br />\r\n                <Preloader size=\"small\" flashing />\r\n              </div>)\r\n            : (<Collapsible accordion={false} >\r\n                {\r\n                  data.map((el, i) => {\r\n                    return <Event data={el} key={el.name}></Event>\r\n                  })\r\n                }\r\n              </Collapsible>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}