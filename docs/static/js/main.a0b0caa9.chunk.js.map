{"version":3,"sources":["components/Event/index.js","components/Map/index.js","components/Sponsors/index.js","components/Menu/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","secondaryHeading","color","icon","verticalAlign","height","Event","props","useState","isOpen","setOpen","useEffect","isSwitchOn","classes","onTitleClick","prev","data","name","url","events","error_msg","error_title","showOnlyPispalaVenues","includes","cleanedName","charAt","toUpperCase","slice","replace","ExpansionPanel","className","expanded","ExpansionPanelSummary","expandIcon","aria-controls","id","onClick","ExpansionPanelDetails","href","target","rel","key","today","Date","todayDay","getDate","todayMonth","getMonth","isThereEventToday","pastEventsFiltered","sort","ev1","ev2","startTimeStamp","filter","event","endTimeStamp","endDate","endDay","endMonth","startDate","startDay","startMonth","eventRows","map","i","happening","endDateParsed","dateParsed","eventToday","todayBGColor","style","backgroundColor","length","LMap","center","zoom","TileLayer","attribution","window","map_data","title","latLong","Marker","position","Popup","Map","isMapOpen","setMap","Modal","aria-labelledby","aria-describedby","open","onRendered","gtag","mapDiv","document","querySelector","button","ReactDOM","render","appendChild","onClose","onBackdropClick","Button","variant","sponsors","until","now","Sponsors","sponsorsToShow","sponsor","Boolean","margin","background","custom","primary","onhover","Menu","isNavOpen","setNav","toggleDrawer","Drawer","pkgJson","version","client","Stitch","initializeDefaultAppClient","db","getServiceClient","RemoteMongoClient","factory","App","setEvents","errorMsg","setErrorMsg","setSwitch","setShowOnlyPispalaVenues","auth","loginWithCredential","AnonymousCredential","then","user","collection","find","_id","asArray","docs","events_data","console","log","catch","err","error","downTimer","handleMouseDown","clearTimeout","setTimeout","prevState","handleMouseUp","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onContextMenu","preventDefault","Switch","checked","inputProps","toString","CircularProgress","first","second","el","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","createMuiTheme","ThemeProvider","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a0b0caa9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport './event.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  secondaryHeading: {\r\n    color: 'rgba(0, 0, 0, 0.6)'\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst Event = (props) => {\r\n  const [isOpen, setOpen] = useState(false)\r\n  useEffect(() => {\r\n    setOpen(() => props.isSwitchOn)\r\n    }, [props.isSwitchOn]\r\n  )\r\n  const classes = useStyles()\r\n\r\n  const onTitleClick = () => setOpen(prev => !prev)\r\n\r\n  let { name, url, events, error_msg, error_title } = props.data\r\n\r\n  if (props.showOnlyPispalaVenues) {\r\n    const nonPispala = ['dogs_home', 'maanalainen', 'visit_tampere', 'huurupiilo']\r\n    if (nonPispala.includes(name)) return null\r\n  }\r\n\r\n  const cleanedName = `${name.charAt(0).toUpperCase()}${name.slice(1)}`.replace(/_/g, ' ')\r\n\r\n  if (error_msg) {\r\n    return (\r\n      <ExpansionPanel className={classes.root} expanded={isOpen}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n          onClick={onTitleClick}\r\n        >\r\n          <div className=\"collapsible-header\">\r\n            {cleanedName}&nbsp;\r\n            <span className=\"secondary-header\">\r\n              ({error_title} 🐛)\r\n            </span>\r\n          </div>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails className=\"collapsible-body\">\r\n          <span className=\"sub-header\">Käyhän nettisivuilla&nbsp;<a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></span><br /><br />\r\n          <ul>\r\n            {\r\n              <li key={'error'}>\r\n                {error_msg}\r\n              </li>\r\n            }\r\n          </ul>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    )\r\n  }\r\n\r\n  if (name === 'vastavirta') events = events.slice(0, 10)\r\n  const today = new Date()\r\n  const todayDay = today.getDate()\r\n  const todayMonth = today.getMonth()\r\n  let isThereEventToday = false\r\n\r\n  const pastEventsFiltered = events\r\n    .sort((ev1, ev2) => ev1.startTimeStamp < ev2.startTimeStamp ? -1 : 1)\r\n    .filter(event => {\r\n      const { startTimeStamp, endTimeStamp } = event\r\n      if (endTimeStamp) {\r\n        const endDate = new Date(endTimeStamp)\r\n        const endDay = endDate.getDate()\r\n        const endMonth = endDate.getMonth()\r\n        return !(endDay < todayDay && endMonth <= todayMonth)\r\n      }\r\n      const startDate = new Date(startTimeStamp)\r\n      const startDay = startDate.getDate()\r\n      const startMonth = startDate.getMonth()\r\n      if (startDay < todayDay && startMonth <= todayMonth) return false\r\n      return true\r\n    })\r\n\r\n  const eventRows = pastEventsFiltered.map((event, i) => {\r\n    const { startTimeStamp, endTimeStamp, event: happening } = event\r\n    const startDate = new Date(startTimeStamp)\r\n    let endDateParsed = ''\r\n    if (endTimeStamp) {\r\n      const endDate = new Date(endTimeStamp)\r\n      endDateParsed = `–${endDate.getDate()}.${endDate.getMonth() + 1}`\r\n    }\r\n    const dateParsed = `${startDate.getDate()}.${startDate.getMonth() + 1}${endDateParsed}`\r\n    const eventToday = ((startDate.getDate() === todayDay) && (startDate.getMonth() === todayMonth))\r\n    if (eventToday) isThereEventToday = true\r\n    const todayBGColor = eventToday ? 'rgba(39,169,157,0.7)' : ''\r\n\r\n    return (\r\n      <tr key={i} style={{ backgroundColor: todayBGColor }}>\r\n        <td>{dateParsed}</td><td>—</td><td>{happening}</td>\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel className={classes.root} expanded={isOpen}>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1c-content\"\r\n        id=\"panel1c-header\"\r\n        onClick={onTitleClick}\r\n      >\r\n        <div className=\"collapsible-header\">\r\n          {cleanedName}\r\n          <span className=\"secondary-header\">\r\n            &nbsp;{` (${pastEventsFiltered.length}) ${isThereEventToday ? '!' : ''}`}\r\n          </span>\r\n        </div>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails className=\"collapsible-body\">\r\n        <span className=\"sub-header\">Aukioloajat & tarkemmat tiedot <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></span>\r\n        {\r\n          name === 'hirvitalo' &&\r\n          <>\r\n            <br />\r\n            <span className=\"sub-header\">Kansankeittiö lauantaisin <a href=\"https://www.facebook.com/groups/294496307351291/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.facebook.com/groups/294496307351291/</a></span>\r\n          </>\r\n        }\r\n\r\n        <br /><br />\r\n        <table>\r\n          <tbody>\r\n            {\r\n              eventRows\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default Event\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport Button from '@material-ui/core/Button'\r\nimport './map.css'\r\n\r\n\r\nconst LMap = () => (\r\n  <LeafletMap center={[61.50238, 23.71477]} zoom={13}>\r\n    <TileLayer\r\n      attribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n    />\r\n    {\r\n      window.map_data &&\r\n      window.map_data.map(({ title, latLong }) => (\r\n        <Marker position={latLong} key={title}>\r\n          <Popup>\r\n            {title}\r\n          </Popup>\r\n        </Marker>\r\n      ))\r\n    }\r\n  </LeafletMap>\r\n)\r\n\r\nconst Map = ({ isMapOpen, setMap }) => {\r\n  const onModalOpen = () => {\r\n    if (process.env.NODE_ENV === \"production\") {\r\n      window.gtag('event', 'map_opened', {\r\n        'event_category': 'user',\r\n        'event_label': 'map',\r\n      })\r\n    }\r\n    const mapDiv = document.querySelector('.map')\r\n    const button = document.querySelector('.map-close-button')\r\n    ReactDOM.render(<LMap />, mapDiv)\r\n    mapDiv.appendChild(button)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      id=\"modal-root\"\r\n      className=\"modal-root\"\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={isMapOpen}\r\n      onRendered={onModalOpen}\r\n      onClose={() => setMap(false)}\r\n      onBackdropClick={() => setMap(false)}\r\n    >\r\n      <div className=\"modal-content\">\r\n        <Button\r\n          className=\"map-close-button\"\r\n          onClick={() => setMap(false)}\r\n          variant=\"outlined\"\r\n          color=\"inherit\"\r\n        >X</Button>\r\n        <div className=\"map\"></div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Map\r\n","import React from 'react'\r\nimport './sponsors.css'\r\n\r\n\r\nconst sponsors = [\r\n  {\r\n    name: 'sadfg',\r\n    url: 'www.example.com',\r\n    until: (Date.now() - 173800)\r\n  },\r\n  {\r\n    name: 'suutari',\r\n    url: 'www.example.com',\r\n    until: Date.now() - 173800\r\n  }\r\n]\r\n\r\nconst Sponsors = () => {\r\n  const sponsorsToShow = sponsors.filter(sponsor => sponsor.until > Date.now())\r\n  return (\r\n    Boolean(sponsorsToShow.length) && (\r\n      <ul className=\"sponsors\">\r\n        Äppiä ylpeästi sponsoroi:\r\n      {\r\n          sponsorsToShow.map(sponsor => {\r\n            return (\r\n              <li key={sponsor.name}>\r\n                <a href={sponsor.url} target=\"_blank\" rel=\"noopener noreferrer\">{sponsor.name}</a>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Sponsors\r\n","/*global gtag*/\r\nimport React, { useState } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Map from '../Map'\r\nimport Sponsors from '../Sponsors'\r\nimport pkgJson from '../../../package.json'\r\nimport './menu.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    width: '50%',\r\n    margin: '5px 25%',\r\n    background: theme.custom.primary,\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      background: theme.custom.onhover,\r\n    }\r\n  },\r\n}))\r\n\r\nconst Menu = () => {\r\n  const classes = useStyles()\r\n  const [isNavOpen, setNav] = useState(false)\r\n  const [isMapOpen, setMap] = useState(false)\r\n  const toggleDrawer = () => {\r\n    setNav(prev => !prev)\r\n    if (process.env.NODE_ENV === \"production\" && !isNavOpen) {\r\n      gtag('event', 'menu_opened', {\r\n        'event_category': 'user',\r\n        'event_label': 'menu',\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"burger-container\"\r\n        className={`${isNavOpen ? 'open' : ''}`}\r\n        onClick={toggleDrawer}\r\n        title=\"Menu\">\r\n        <div id=\"burger\">\r\n          <span>&nbsp;</span>\r\n          <span>&nbsp;</span>\r\n          <span>&nbsp;</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"drawer-container\">\r\n        <Drawer open={isNavOpen} onClose={() => toggleDrawer(false)}>\r\n          <div className=\"menu-content\">\r\n            <h3>\r\n              Pispalan tapahtumat&nbsp;\r\n              <span className=\"version\">\r\n                v{pkgJson.version} &copy;Fraasi\r\n              </span>\r\n            </h3>\r\n            <p>\r\n              Pispalan harjun tapahtumat yhdellä sivustolla.\r\n          </p>\r\n            <p>\r\n              <strong>Vinkki: </strong>\r\n              Tämä nettisivu (<a href=\"https://pispala.events/\" target=\"_blank\" rel=\"noopener noreferrer\">https://pispala.events/</a>) on suunniteltu kännykälle ja toimii parhaiten kun avaa nettisivun luurin selaimessa ja valitsee asetuksista 'Add to home screen', jolloin lähtöruudulle napsahtaa kuvake jota klikkaamalla sivu toimii kuten muutkin 'äpit'.\r\n          </p>\r\n            <p>\r\n              Jos sivulta löytyy virheitä tai haluat ehdottaa jotain paikkaa listalle, palautetta voi lähettää osoitteeseen <a href=\"mailto:fraasi.gh@gmail.com\">fraasi.gh@gmail.com</a>\r\n            </p>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"inherit\"\r\n              className={classes.button}\r\n              onClick={() => {\r\n                toggleDrawer(false)\r\n                setMap(true)\r\n              }\r\n              }>\r\n              Kartalla\r\n            </Button>\r\n            <Sponsors />\r\n          </div>\r\n\r\n        </Drawer>\r\n        <Map isMapOpen={isMapOpen} setMap={setMap}/>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { useState, useEffect } from 'react'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Event from './components/Event'\r\nimport Menu from './components/Menu'\r\nimport './App.css'\r\n\r\nimport { Stitch, RemoteMongoClient, AnonymousCredential } from 'mongodb-stitch-browser-sdk'\r\n\r\nconst client = Stitch.initializeDefaultAppClient('tapahtumat-api-lffsa')\r\nconst db = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db('tapahtumat')\r\n\r\nfunction App() {\r\n\r\n  const [events, setEvents] = useState(null)\r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n  const [isSwitchOn, setSwitch] = useState(false)\r\n  const [showOnlyPispalaVenues, setShowOnlyPispalaVenues] = useState(true)\r\n\r\n  useEffect(() => {\r\n    client.auth.loginWithCredential(new AnonymousCredential())\r\n      .then(user => {\r\n        return db.collection('pispala').find({}, { data: 1, _id: 0 }).asArray()\r\n      }\r\n      ).then(docs => {\r\n        const { events_data, map_data } = docs[0].data\r\n        setEvents(() => events_data)\r\n        console.log('data', events_data)\r\n        // only way to pass data to LMap, 'cos of the way \r\n        // leaflet works, no props no context :(\r\n        window.map_data = map_data\r\n      }).catch(err => {\r\n        console.error('Data fetch error:', err)\r\n        setErrorMsg(() => err)\r\n      })\r\n  }, [])\r\n\r\n  const onSwitchChange = () => {\r\n    setSwitch(prev => !prev)\r\n  }\r\n\r\n  let downTimer = null\r\n\r\n  const handleMouseDown = () => {\r\n    clearTimeout(downTimer);\r\n    downTimer = setTimeout(function () {\r\n      setShowOnlyPispalaVenues(prevState => !prevState)\r\n    }, 5000)\r\n  }\r\n\r\n  const handleMouseUp = () => {\r\n    clearTimeout(downTimer)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1 className=\"title\" onMouseDown={handleMouseDown} onMouseUp={handleMouseUp} onTouchStart={handleMouseDown} onTouchEnd={handleMouseUp} onContextMenu={event => event.preventDefault()}>\r\n          Pispalan Tapahtumat\r\n        </h1>\r\n        <Switch\r\n          className=\"switch\"\r\n          checked={isSwitchOn}\r\n          onClick={onSwitchChange}\r\n          title=\"Avaa/sulje kaikki\"\r\n          color=\"default\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n        <Menu />\r\n      </header>\r\n      {\r\n        errorMsg !== null\r\n          ? (<div className=\"error-loader\">{errorMsg.toString()}</div>)\r\n          : events === null\r\n            ? (<div className=\"error-loader\">\r\n              Haetaan tapahtumia...<br /><br />\r\n              <CircularProgress />\r\n            </div>)\r\n            : (<div>\r\n              {\r\n                events\r\n                  .sort((first, second) => first.name < second.name ? -1 : 1).map((el) => {\r\n                    return (\r\n                      <Event\r\n                        data={el}\r\n                        key={el.name}\r\n                        showOnlyPispalaVenues={showOnlyPispalaVenues}\r\n                        isSwitchOn={isSwitchOn}>\r\n                      </Event>\r\n                    )\r\n                  })\r\n              }\r\n            </div>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\n\nconst theme = createMuiTheme({\n  custom: {\n    primary: '#1d7d74',\n    onhover: '#1b7068'\n  }\n})\n\nfunction Themed() {\n  return (\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  )\n}\n\nReactDOM.render(<Themed />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}